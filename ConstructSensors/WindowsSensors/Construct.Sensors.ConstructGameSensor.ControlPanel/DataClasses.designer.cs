#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Columbia.CCF.UI.ControlPanel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CCF")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdef_Object(def_Object instance);
    partial void Updatedef_Object(def_Object instance);
    partial void Deletedef_Object(def_Object instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Columbia.CCF.UI.ControlPanel.Properties.Settings.Default.CCFConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<def_Object> def_Objects
		{
			get
			{
				return this.GetTable<def_Object>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.def_Objects")]
	public partial class def_Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectDefId;
		
		private int _ObjectTypeId;
		
		private string _ObjectName;
		
		private string _Pseudonim;
		
		private System.Nullable<int> _playerNumber;
		
		private System.Nullable<bool> _isAvailable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectDefIdChanging(int value);
    partial void OnObjectDefIdChanged();
    partial void OnObjectTypeIdChanging(int value);
    partial void OnObjectTypeIdChanged();
    partial void OnObjectNameChanging(string value);
    partial void OnObjectNameChanged();
    partial void OnPseudonimChanging(string value);
    partial void OnPseudonimChanged();
    partial void OnplayerNumberChanging(System.Nullable<int> value);
    partial void OnplayerNumberChanged();
    partial void OnisAvailableChanging(System.Nullable<bool> value);
    partial void OnisAvailableChanged();
    #endregion
		
		public def_Object()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectDefId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ObjectDefId
		{
			get
			{
				return this._ObjectDefId;
			}
			set
			{
				if ((this._ObjectDefId != value))
				{
					this.OnObjectDefIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectDefId = value;
					this.SendPropertyChanged("ObjectDefId");
					this.OnObjectDefIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeId", DbType="Int NOT NULL")]
		public int ObjectTypeId
		{
			get
			{
				return this._ObjectTypeId;
			}
			set
			{
				if ((this._ObjectTypeId != value))
				{
					this.OnObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeId = value;
					this.SendPropertyChanged("ObjectTypeId");
					this.OnObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ObjectName
		{
			get
			{
				return this._ObjectName;
			}
			set
			{
				if ((this._ObjectName != value))
				{
					this.OnObjectNameChanging(value);
					this.SendPropertyChanging();
					this._ObjectName = value;
					this.SendPropertyChanged("ObjectName");
					this.OnObjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pseudonim", DbType="NVarChar(100)")]
		public string Pseudonim
		{
			get
			{
				return this._Pseudonim;
			}
			set
			{
				if ((this._Pseudonim != value))
				{
					this.OnPseudonimChanging(value);
					this.SendPropertyChanging();
					this._Pseudonim = value;
					this.SendPropertyChanged("Pseudonim");
					this.OnPseudonimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playerNumber", DbType="Int")]
		public System.Nullable<int> playerNumber
		{
			get
			{
				return this._playerNumber;
			}
			set
			{
				if ((this._playerNumber != value))
				{
					this.OnplayerNumberChanging(value);
					this.SendPropertyChanging();
					this._playerNumber = value;
					this.SendPropertyChanged("playerNumber");
					this.OnplayerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAvailable", DbType="Bit")]
		public System.Nullable<bool> isAvailable
		{
			get
			{
				return this._isAvailable;
			}
			set
			{
				if ((this._isAvailable != value))
				{
					this.OnisAvailableChanging(value);
					this.SendPropertyChanging();
					this._isAvailable = value;
					this.SendPropertyChanged("isAvailable");
					this.OnisAvailableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
