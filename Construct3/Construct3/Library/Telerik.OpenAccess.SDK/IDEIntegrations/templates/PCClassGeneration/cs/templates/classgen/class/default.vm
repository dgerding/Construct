#if($hasErrors)//***Telerik OpenAccess - Reverse Engineering errors***#end
#foreach($error in $errors)#error $error#end#end
#foreach($assembly in $assemblies)//$assembly#end
using System;
using System.Collections.Generic;
#foreach( $import in $imports )${import}#end
#if(${hasPackage})namespace ${classPackage} 
{#end
    // Generated by Telerik OpenAccess
    // Used template: $usedTemplate
    [Telerik.OpenAccess.Persistent#if($multipleField)(Identity=typeof(#end#if($multipleField && $hasPackage)$classPackage.#end#if($multipleField)$className.ID))#end#if($singleField)(IdentityField="$(pkField)")#end]
    public class $className 
    {
#foreach( $variableDeclaration in $allVariableDeclaration )$variableDeclaration#end
        public $className() 
        {
        }
    
#foreach( $variableAccess in $allVariableAccess )$variableAccess #end
#if ($multipleField)$objectIdentity#end
    }
#if(${hasPackage})}#end
