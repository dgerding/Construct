//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Construct.UX.ViewModels.Questions.QuestionsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinqExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeID {
            get {
                return this.DataTypeIDField;
            }
            set {
                if ((this.DataTypeIDField.Equals(value) != true)) {
                    this.DataTypeIDField = value;
                    this.RaisePropertyChanged("DataTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinqExpression {
            get {
                return this.LinqExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.LinqExpressionField, value) != true)) {
                    this.LinqExpressionField = value;
                    this.RaisePropertyChanged("LinqExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionTypeSource", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class QuestionTypeSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategory {
            get {
                return this.IsCategoryField;
            }
            set {
                if ((this.IsCategoryField.Equals(value) != true)) {
                    this.IsCategoryField = value;
                    this.RaisePropertyChanged("IsCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class DataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoreTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeParentID {
            get {
                return this.DataTypeParentIDField;
            }
            set {
                if ((this.DataTypeParentIDField.Equals(value) != true)) {
                    this.DataTypeParentIDField = value;
                    this.RaisePropertyChanged("DataTypeParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCoreType {
            get {
                return this.IsCoreTypeField;
            }
            set {
                if ((this.IsCoreTypeField.Equals(value) != true)) {
                    this.IsCoreTypeField = value;
                    this.RaisePropertyChanged("IsCoreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyParent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyType))]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyParent", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyType))]
    public partial class PropertyParent : Construct.UX.ViewModels.Questions.QuestionsServiceReference.Property {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentDataTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentDataTypeID {
            get {
                return this.ParentDataTypeIDField;
            }
            set {
                if ((this.ParentDataTypeIDField.Equals(value) != true)) {
                    this.ParentDataTypeIDField = value;
                    this.RaisePropertyChanged("ParentDataTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class PropertyType : Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyParent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyDataTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyDataTypeID {
            get {
                return this.PropertyDataTypeIDField;
            }
            set {
                if ((this.PropertyDataTypeIDField.Equals(value) != true)) {
                    this.PropertyDataTypeIDField = value;
                    this.RaisePropertyChanged("PropertyDataTypeID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuestionsServiceReference.IModel")]
    public interface IModel {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddQuestion", ReplyAction="http://tempuri.org/IModel/AddQuestionResponse")]
        bool AddQuestion(Construct.UX.ViewModels.Questions.QuestionsServiceReference.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddQuestionTypeSource", ReplyAction="http://tempuri.org/IModel/AddQuestionTypeSourceResponse")]
        bool AddQuestionTypeSource(Construct.UX.ViewModels.Questions.QuestionsServiceReference.QuestionTypeSource question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetDataTypes", ReplyAction="http://tempuri.org/IModel/GetDataTypesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.DataType> GetDataTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetProperties", ReplyAction="http://tempuri.org/IModel/GetPropertiesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.Property> GetProperties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetPropertyParents", ReplyAction="http://tempuri.org/IModel/GetPropertyParentsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyParent> GetPropertyParents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetPropertyTypes", ReplyAction="http://tempuri.org/IModel/GetPropertyTypesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyType> GetPropertyTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetQuestions", ReplyAction="http://tempuri.org/IModel/GetQuestionsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.Question> GetQuestions();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelChannel : Construct.UX.ViewModels.Questions.QuestionsServiceReference.IModel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelClient : System.ServiceModel.ClientBase<Construct.UX.ViewModels.Questions.QuestionsServiceReference.IModel>, Construct.UX.ViewModels.Questions.QuestionsServiceReference.IModel {
        
        public ModelClient() {
        }
        
        public ModelClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModelClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddQuestion(Construct.UX.ViewModels.Questions.QuestionsServiceReference.Question question) {
            return base.Channel.AddQuestion(question);
        }
        
        public bool AddQuestionTypeSource(Construct.UX.ViewModels.Questions.QuestionsServiceReference.QuestionTypeSource question) {
            return base.Channel.AddQuestionTypeSource(question);
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.DataType> GetDataTypes() {
            return base.Channel.GetDataTypes();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.Property> GetProperties() {
            return base.Channel.GetProperties();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyParent> GetPropertyParents() {
            return base.Channel.GetPropertyParents();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.PropertyType> GetPropertyTypes() {
            return base.Channel.GetPropertyTypes();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Questions.QuestionsServiceReference.Question> GetQuestions() {
            return base.Channel.GetQuestions();
        }
    }
}
