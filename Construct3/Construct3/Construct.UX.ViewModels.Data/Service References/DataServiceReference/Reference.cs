//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Construct.UX.ViewModels.Data.DataServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTypeSource", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class DataTypeSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategory {
            get {
                return this.IsCategoryField;
            }
            set {
                if ((this.IsCategoryField.Equals(value) != true)) {
                    this.IsCategoryField = value;
                    this.RaisePropertyChanged("IsCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class DataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoreTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeParentID {
            get {
                return this.DataTypeParentIDField;
            }
            set {
                if ((this.DataTypeParentIDField.Equals(value) != true)) {
                    this.DataTypeParentIDField = value;
                    this.RaisePropertyChanged("DataTypeParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCoreType {
            get {
                return this.IsCoreTypeField;
            }
            set {
                if ((this.IsCoreTypeField.Equals(value) != true)) {
                    this.IsCoreTypeField = value;
                    this.RaisePropertyChanged("IsCoreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class PropertyType : Construct.UX.ViewModels.Data.DataServiceReference.PropertyParent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyDataTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyDataTypeID {
            get {
                return this.PropertyDataTypeIDField;
            }
            set {
                if ((this.PropertyDataTypeIDField.Equals(value) != true)) {
                    this.PropertyDataTypeIDField = value;
                    this.RaisePropertyChanged("PropertyDataTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Data.DataServiceReference.PropertyParent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Data.DataServiceReference.PropertyType))]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyParent", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Data.DataServiceReference.PropertyType))]
    public partial class PropertyParent : Construct.UX.ViewModels.Data.DataServiceReference.Property {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentDataTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentDataTypeID {
            get {
                return this.ParentDataTypeIDField;
            }
            set {
                if ((this.ParentDataTypeIDField.Equals(value) != true)) {
                    this.ParentDataTypeIDField = value;
                    this.RaisePropertyChanged("ParentDataTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Datum", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Data")]
    [System.SerializableAttribute()]
    public partial class Datum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> dynamicPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> dynamicProperties {
            get {
                return this.dynamicPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.dynamicPropertiesField, value) != true)) {
                    this.dynamicPropertiesField = value;
                    this.RaisePropertyChanged("dynamicProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataServiceReference.IModel", CallbackContract=typeof(Construct.UX.ViewModels.Data.DataServiceReference.IModelCallback))]
    public interface IModel {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddTypeWithXML", ReplyAction="http://tempuri.org/IModel/AddTypeWithXMLResponse")]
        bool AddTypeWithXML(string xml);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddTypeWithXML", ReplyAction="http://tempuri.org/IModel/AddTypeWithXMLResponse")]
        System.IAsyncResult BeginAddTypeWithXML(string xml, System.AsyncCallback callback, object asyncState);
        
        bool EndAddTypeWithXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddTypeWithDataType", ReplyAction="http://tempuri.org/IModel/AddTypeWithDataTypeResponse")]
        bool AddTypeWithDataType(Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source, Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties, bool IsAggregateType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddTypeWithDataType", ReplyAction="http://tempuri.org/IModel/AddTypeWithDataTypeResponse")]
        System.IAsyncResult BeginAddTypeWithDataType(Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source, Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties, bool IsAggregateType, System.AsyncCallback callback, object asyncState);
        
        bool EndAddTypeWithDataType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/SetContext", ReplyAction="http://tempuri.org/IModel/SetContextResponse")]
        bool SetContext(string connectionString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/SetContext", ReplyAction="http://tempuri.org/IModel/SetContextResponse")]
        System.IAsyncResult BeginSetContext(string connectionString, System.AsyncCallback callback, object asyncState);
        
        bool EndSetContext(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/Add", ReplyAction="http://tempuri.org/IModel/AddResponse")]
        void Add(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/Add", ReplyAction="http://tempuri.org/IModel/AddResponse")]
        System.IAsyncResult BeginAdd(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum, System.AsyncCallback callback, object asyncState);
        
        void EndAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllTypes", ReplyAction="http://tempuri.org/IModel/GetAllTypesResponse")]
        Construct.UX.ViewModels.Data.DataServiceReference.DataType[] GetAllTypes();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllTypes", ReplyAction="http://tempuri.org/IModel/GetAllTypesResponse")]
        System.IAsyncResult BeginGetAllTypes(System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Data.DataServiceReference.DataType[] EndGetAllTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetUris", ReplyAction="http://tempuri.org/IModel/GetUrisResponse")]
        System.Collections.ObjectModel.ReadOnlyCollection<System.Uri> GetUris(Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetUris", ReplyAction="http://tempuri.org/IModel/GetUrisResponse")]
        System.IAsyncResult BeginGetUris(Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ReadOnlyCollection<System.Uri> EndGetUris(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetPropertyValueEndpoint", ReplyAction="http://tempuri.org/IModel/GetPropertyValueEndpointResponse")]
        System.Uri GetPropertyValueEndpoint(System.Guid propertyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetPropertyValueEndpoint", ReplyAction="http://tempuri.org/IModel/GetPropertyValueEndpointResponse")]
        System.IAsyncResult BeginGetPropertyValueEndpoint(System.Guid propertyID, System.AsyncCallback callback, object asyncState);
        
        System.Uri EndGetPropertyValueEndpoint(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/HandleItem", ReplyAction="http://tempuri.org/IModel/HandleItemResponse")]
        void HandleItem(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/HandleItem", ReplyAction="http://tempuri.org/IModel/HandleItemResponse")]
        System.IAsyncResult BeginHandleItem(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum, System.AsyncCallback callback, object asyncState);
        
        void EndHandleItem(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelChannel : Construct.UX.ViewModels.Data.DataServiceReference.IModel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddTypeWithXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddTypeWithXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddTypeWithDataTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddTypeWithDataTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Data.DataServiceReference.DataType[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Data.DataServiceReference.DataType[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUrisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUrisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ReadOnlyCollection<System.Uri> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPropertyValueEndpointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPropertyValueEndpointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Uri Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Uri)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelClient : System.ServiceModel.DuplexClientBase<Construct.UX.ViewModels.Data.DataServiceReference.IModel>, Construct.UX.ViewModels.Data.DataServiceReference.IModel {
        
        private BeginOperationDelegate onBeginAddTypeWithXMLDelegate;
        
        private EndOperationDelegate onEndAddTypeWithXMLDelegate;
        
        private System.Threading.SendOrPostCallback onAddTypeWithXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddTypeWithDataTypeDelegate;
        
        private EndOperationDelegate onEndAddTypeWithDataTypeDelegate;
        
        private System.Threading.SendOrPostCallback onAddTypeWithDataTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetContextDelegate;
        
        private EndOperationDelegate onEndSetContextDelegate;
        
        private System.Threading.SendOrPostCallback onSetContextCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDelegate;
        
        private EndOperationDelegate onEndAddDelegate;
        
        private System.Threading.SendOrPostCallback onAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTypesDelegate;
        
        private EndOperationDelegate onEndGetAllTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUrisDelegate;
        
        private EndOperationDelegate onEndGetUrisDelegate;
        
        private System.Threading.SendOrPostCallback onGetUrisCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPropertyValueEndpointDelegate;
        
        private EndOperationDelegate onEndGetPropertyValueEndpointDelegate;
        
        private System.Threading.SendOrPostCallback onGetPropertyValueEndpointCompletedDelegate;
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddTypeWithXMLCompletedEventArgs> AddTypeWithXMLCompleted;
        
        public event System.EventHandler<AddTypeWithDataTypeCompletedEventArgs> AddTypeWithDataTypeCompleted;
        
        public event System.EventHandler<SetContextCompletedEventArgs> SetContextCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCompleted;
        
        public event System.EventHandler<GetAllTypesCompletedEventArgs> GetAllTypesCompleted;
        
        public event System.EventHandler<GetUrisCompletedEventArgs> GetUrisCompleted;
        
        public event System.EventHandler<GetPropertyValueEndpointCompletedEventArgs> GetPropertyValueEndpointCompleted;
        
        public bool AddTypeWithXML(string xml) {
            return base.Channel.AddTypeWithXML(xml);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddTypeWithXML(string xml, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTypeWithXML(xml, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddTypeWithXML(System.IAsyncResult result) {
            return base.Channel.EndAddTypeWithXML(result);
        }
        
        private System.IAsyncResult OnBeginAddTypeWithXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xml = ((string)(inValues[0]));
            return this.BeginAddTypeWithXML(xml, callback, asyncState);
        }
        
        private object[] OnEndAddTypeWithXML(System.IAsyncResult result) {
            bool retVal = this.EndAddTypeWithXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddTypeWithXMLCompleted(object state) {
            if ((this.AddTypeWithXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTypeWithXMLCompleted(this, new AddTypeWithXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTypeWithXMLAsync(string xml) {
            this.AddTypeWithXMLAsync(xml, null);
        }
        
        public void AddTypeWithXMLAsync(string xml, object userState) {
            if ((this.onBeginAddTypeWithXMLDelegate == null)) {
                this.onBeginAddTypeWithXMLDelegate = new BeginOperationDelegate(this.OnBeginAddTypeWithXML);
            }
            if ((this.onEndAddTypeWithXMLDelegate == null)) {
                this.onEndAddTypeWithXMLDelegate = new EndOperationDelegate(this.OnEndAddTypeWithXML);
            }
            if ((this.onAddTypeWithXMLCompletedDelegate == null)) {
                this.onAddTypeWithXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTypeWithXMLCompleted);
            }
            base.InvokeAsync(this.onBeginAddTypeWithXMLDelegate, new object[] {
                        xml}, this.onEndAddTypeWithXMLDelegate, this.onAddTypeWithXMLCompletedDelegate, userState);
        }
        
        public bool AddTypeWithDataType(Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source, Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties, bool IsAggregateType) {
            return base.Channel.AddTypeWithDataType(source, dataType, properties, IsAggregateType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddTypeWithDataType(Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source, Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties, bool IsAggregateType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTypeWithDataType(source, dataType, properties, IsAggregateType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddTypeWithDataType(System.IAsyncResult result) {
            return base.Channel.EndAddTypeWithDataType(result);
        }
        
        private System.IAsyncResult OnBeginAddTypeWithDataType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source = ((Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource)(inValues[0]));
            Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType = ((Construct.UX.ViewModels.Data.DataServiceReference.DataType)(inValues[1]));
            Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties = ((Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[])(inValues[2]));
            bool IsAggregateType = ((bool)(inValues[3]));
            return this.BeginAddTypeWithDataType(source, dataType, properties, IsAggregateType, callback, asyncState);
        }
        
        private object[] OnEndAddTypeWithDataType(System.IAsyncResult result) {
            bool retVal = this.EndAddTypeWithDataType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddTypeWithDataTypeCompleted(object state) {
            if ((this.AddTypeWithDataTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTypeWithDataTypeCompleted(this, new AddTypeWithDataTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTypeWithDataTypeAsync(Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source, Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties, bool IsAggregateType) {
            this.AddTypeWithDataTypeAsync(source, dataType, properties, IsAggregateType, null);
        }
        
        public void AddTypeWithDataTypeAsync(Construct.UX.ViewModels.Data.DataServiceReference.DataTypeSource source, Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType[] properties, bool IsAggregateType, object userState) {
            if ((this.onBeginAddTypeWithDataTypeDelegate == null)) {
                this.onBeginAddTypeWithDataTypeDelegate = new BeginOperationDelegate(this.OnBeginAddTypeWithDataType);
            }
            if ((this.onEndAddTypeWithDataTypeDelegate == null)) {
                this.onEndAddTypeWithDataTypeDelegate = new EndOperationDelegate(this.OnEndAddTypeWithDataType);
            }
            if ((this.onAddTypeWithDataTypeCompletedDelegate == null)) {
                this.onAddTypeWithDataTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTypeWithDataTypeCompleted);
            }
            base.InvokeAsync(this.onBeginAddTypeWithDataTypeDelegate, new object[] {
                        source,
                        dataType,
                        properties,
                        IsAggregateType}, this.onEndAddTypeWithDataTypeDelegate, this.onAddTypeWithDataTypeCompletedDelegate, userState);
        }
        
        public bool SetContext(string connectionString) {
            return base.Channel.SetContext(connectionString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetContext(string connectionString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetContext(connectionString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetContext(System.IAsyncResult result) {
            return base.Channel.EndSetContext(result);
        }
        
        private System.IAsyncResult OnBeginSetContext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string connectionString = ((string)(inValues[0]));
            return this.BeginSetContext(connectionString, callback, asyncState);
        }
        
        private object[] OnEndSetContext(System.IAsyncResult result) {
            bool retVal = this.EndSetContext(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetContextCompleted(object state) {
            if ((this.SetContextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetContextCompleted(this, new SetContextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetContextAsync(string connectionString) {
            this.SetContextAsync(connectionString, null);
        }
        
        public void SetContextAsync(string connectionString, object userState) {
            if ((this.onBeginSetContextDelegate == null)) {
                this.onBeginSetContextDelegate = new BeginOperationDelegate(this.OnBeginSetContext);
            }
            if ((this.onEndSetContextDelegate == null)) {
                this.onEndSetContextDelegate = new EndOperationDelegate(this.OnEndSetContext);
            }
            if ((this.onSetContextCompletedDelegate == null)) {
                this.onSetContextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetContextCompleted);
            }
            base.InvokeAsync(this.onBeginSetContextDelegate, new object[] {
                        connectionString}, this.onEndSetContextDelegate, this.onSetContextCompletedDelegate, userState);
        }
        
        public void Add(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum) {
            base.Channel.Add(datum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAdd(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdd(datum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAdd(System.IAsyncResult result) {
            base.Channel.EndAdd(result);
        }
        
        private System.IAsyncResult OnBeginAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Data.DataServiceReference.Datum datum = ((Construct.UX.ViewModels.Data.DataServiceReference.Datum)(inValues[0]));
            return this.BeginAdd(datum, callback, asyncState);
        }
        
        private object[] OnEndAdd(System.IAsyncResult result) {
            this.EndAdd(result);
            return null;
        }
        
        private void OnAddCompleted(object state) {
            if ((this.AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAsync(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum) {
            this.AddAsync(datum, null);
        }
        
        public void AddAsync(Construct.UX.ViewModels.Data.DataServiceReference.Datum datum, object userState) {
            if ((this.onBeginAddDelegate == null)) {
                this.onBeginAddDelegate = new BeginOperationDelegate(this.OnBeginAdd);
            }
            if ((this.onEndAddDelegate == null)) {
                this.onEndAddDelegate = new EndOperationDelegate(this.OnEndAdd);
            }
            if ((this.onAddCompletedDelegate == null)) {
                this.onAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCompleted);
            }
            base.InvokeAsync(this.onBeginAddDelegate, new object[] {
                        datum}, this.onEndAddDelegate, this.onAddCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Data.DataServiceReference.DataType[] GetAllTypes() {
            return base.Channel.GetAllTypes();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Data.DataServiceReference.DataType[] EndGetAllTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAllTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTypes(callback, asyncState);
        }
        
        private object[] OnEndGetAllTypes(System.IAsyncResult result) {
            Construct.UX.ViewModels.Data.DataServiceReference.DataType[] retVal = this.EndGetAllTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTypesCompleted(object state) {
            if ((this.GetAllTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTypesCompleted(this, new GetAllTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTypesAsync() {
            this.GetAllTypesAsync(null);
        }
        
        public void GetAllTypesAsync(object userState) {
            if ((this.onBeginGetAllTypesDelegate == null)) {
                this.onBeginGetAllTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAllTypes);
            }
            if ((this.onEndGetAllTypesDelegate == null)) {
                this.onEndGetAllTypesDelegate = new EndOperationDelegate(this.OnEndGetAllTypes);
            }
            if ((this.onGetAllTypesCompletedDelegate == null)) {
                this.onGetAllTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTypesDelegate, null, this.onEndGetAllTypesDelegate, this.onGetAllTypesCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ReadOnlyCollection<System.Uri> GetUris(Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType) {
            return base.Channel.GetUris(dataType, propertyType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUris(Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUris(dataType, propertyType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ReadOnlyCollection<System.Uri> EndGetUris(System.IAsyncResult result) {
            return base.Channel.EndGetUris(result);
        }
        
        private System.IAsyncResult OnBeginGetUris(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType = ((Construct.UX.ViewModels.Data.DataServiceReference.DataType)(inValues[0]));
            Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType = ((Construct.UX.ViewModels.Data.DataServiceReference.PropertyType)(inValues[1]));
            return this.BeginGetUris(dataType, propertyType, callback, asyncState);
        }
        
        private object[] OnEndGetUris(System.IAsyncResult result) {
            System.Collections.ObjectModel.ReadOnlyCollection<System.Uri> retVal = this.EndGetUris(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUrisCompleted(object state) {
            if ((this.GetUrisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUrisCompleted(this, new GetUrisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUrisAsync(Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType) {
            this.GetUrisAsync(dataType, propertyType, null);
        }
        
        public void GetUrisAsync(Construct.UX.ViewModels.Data.DataServiceReference.DataType dataType, Construct.UX.ViewModels.Data.DataServiceReference.PropertyType propertyType, object userState) {
            if ((this.onBeginGetUrisDelegate == null)) {
                this.onBeginGetUrisDelegate = new BeginOperationDelegate(this.OnBeginGetUris);
            }
            if ((this.onEndGetUrisDelegate == null)) {
                this.onEndGetUrisDelegate = new EndOperationDelegate(this.OnEndGetUris);
            }
            if ((this.onGetUrisCompletedDelegate == null)) {
                this.onGetUrisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUrisCompleted);
            }
            base.InvokeAsync(this.onBeginGetUrisDelegate, new object[] {
                        dataType,
                        propertyType}, this.onEndGetUrisDelegate, this.onGetUrisCompletedDelegate, userState);
        }
        
        public System.Uri GetPropertyValueEndpoint(System.Guid propertyID) {
            return base.Channel.GetPropertyValueEndpoint(propertyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPropertyValueEndpoint(System.Guid propertyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPropertyValueEndpoint(propertyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Uri EndGetPropertyValueEndpoint(System.IAsyncResult result) {
            return base.Channel.EndGetPropertyValueEndpoint(result);
        }
        
        private System.IAsyncResult OnBeginGetPropertyValueEndpoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid propertyID = ((System.Guid)(inValues[0]));
            return this.BeginGetPropertyValueEndpoint(propertyID, callback, asyncState);
        }
        
        private object[] OnEndGetPropertyValueEndpoint(System.IAsyncResult result) {
            System.Uri retVal = this.EndGetPropertyValueEndpoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPropertyValueEndpointCompleted(object state) {
            if ((this.GetPropertyValueEndpointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPropertyValueEndpointCompleted(this, new GetPropertyValueEndpointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPropertyValueEndpointAsync(System.Guid propertyID) {
            this.GetPropertyValueEndpointAsync(propertyID, null);
        }
        
        public void GetPropertyValueEndpointAsync(System.Guid propertyID, object userState) {
            if ((this.onBeginGetPropertyValueEndpointDelegate == null)) {
                this.onBeginGetPropertyValueEndpointDelegate = new BeginOperationDelegate(this.OnBeginGetPropertyValueEndpoint);
            }
            if ((this.onEndGetPropertyValueEndpointDelegate == null)) {
                this.onEndGetPropertyValueEndpointDelegate = new EndOperationDelegate(this.OnEndGetPropertyValueEndpoint);
            }
            if ((this.onGetPropertyValueEndpointCompletedDelegate == null)) {
                this.onGetPropertyValueEndpointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPropertyValueEndpointCompleted);
            }
            base.InvokeAsync(this.onBeginGetPropertyValueEndpointDelegate, new object[] {
                        propertyID}, this.onEndGetPropertyValueEndpointDelegate, this.onGetPropertyValueEndpointCompletedDelegate, userState);
        }
    }
}
