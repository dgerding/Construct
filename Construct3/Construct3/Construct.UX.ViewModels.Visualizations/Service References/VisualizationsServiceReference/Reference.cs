//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Visualization", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Visualization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid VisualizerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeID {
            get {
                return this.DataTypeIDField;
            }
            set {
                if ((this.DataTypeIDField.Equals(value) != true)) {
                    this.DataTypeIDField = value;
                    this.RaisePropertyChanged("DataTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid VisualizerID {
            get {
                return this.VisualizerIDField;
            }
            set {
                if ((this.VisualizerIDField.Equals(value) != true)) {
                    this.VisualizerIDField = value;
                    this.RaisePropertyChanged("VisualizerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class DataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoreTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeParentID {
            get {
                return this.DataTypeParentIDField;
            }
            set {
                if ((this.DataTypeParentIDField.Equals(value) != true)) {
                    this.DataTypeParentIDField = value;
                    this.RaisePropertyChanged("DataTypeParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCoreType {
            get {
                return this.IsCoreTypeField;
            }
            set {
                if ((this.IsCoreTypeField.Equals(value) != true)) {
                    this.IsCoreTypeField = value;
                    this.RaisePropertyChanged("IsCoreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class PropertyType : Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyParent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyDataTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyDataTypeID {
            get {
                return this.PropertyDataTypeIDField;
            }
            set {
                if ((this.PropertyDataTypeIDField.Equals(value) != true)) {
                    this.PropertyDataTypeIDField = value;
                    this.RaisePropertyChanged("PropertyDataTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyParent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType))]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyParent", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType))]
    public partial class PropertyParent : Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Property {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentDataTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentDataTypeID {
            get {
                return this.ParentDataTypeIDField;
            }
            set {
                if ((this.ParentDataTypeIDField.Equals(value) != true)) {
                    this.ParentDataTypeIDField = value;
                    this.RaisePropertyChanged("ParentDataTypeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Visualizer", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Visualizer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PrimitiveDataTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PrimitiveDataTypeID {
            get {
                return this.PrimitiveDataTypeIDField;
            }
            set {
                if ((this.PrimitiveDataTypeIDField.Equals(value) != true)) {
                    this.PrimitiveDataTypeIDField = value;
                    this.RaisePropertyChanged("PrimitiveDataTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Source : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Label", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Label : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Taxonomy", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Taxonomy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxonomyLabel", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class TaxonomyLabel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LabelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TaxonomyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LabelID {
            get {
                return this.LabelIDField;
            }
            set {
                if ((this.LabelIDField.Equals(value) != true)) {
                    this.LabelIDField = value;
                    this.RaisePropertyChanged("LabelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TaxonomyID {
            get {
                return this.TaxonomyIDField;
            }
            set {
                if ((this.TaxonomyIDField.Equals(value) != true)) {
                    this.TaxonomyIDField = value;
                    this.RaisePropertyChanged("TaxonomyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabeledItemAdapter", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Visualizations")]
    [System.SerializableAttribute()]
    public partial class LabeledItemAdapter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LabeledIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LabeledItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LabeledPropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LabeledSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LabeledStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TaxonomyLabelIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabeledInterval {
            get {
                return this.LabeledIntervalField;
            }
            set {
                if ((this.LabeledIntervalField.Equals(value) != true)) {
                    this.LabeledIntervalField = value;
                    this.RaisePropertyChanged("LabeledInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LabeledItemID {
            get {
                return this.LabeledItemIDField;
            }
            set {
                if ((this.LabeledItemIDField.Equals(value) != true)) {
                    this.LabeledItemIDField = value;
                    this.RaisePropertyChanged("LabeledItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LabeledPropertyID {
            get {
                return this.LabeledPropertyIDField;
            }
            set {
                if ((this.LabeledPropertyIDField.Equals(value) != true)) {
                    this.LabeledPropertyIDField = value;
                    this.RaisePropertyChanged("LabeledPropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LabeledSourceID {
            get {
                return this.LabeledSourceIDField;
            }
            set {
                if ((this.LabeledSourceIDField.Equals(value) != true)) {
                    this.LabeledSourceIDField = value;
                    this.RaisePropertyChanged("LabeledSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LabeledStartTime {
            get {
                return this.LabeledStartTimeField;
            }
            set {
                if ((this.LabeledStartTimeField.Equals(value) != true)) {
                    this.LabeledStartTimeField = value;
                    this.RaisePropertyChanged("LabeledStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TaxonomyLabelID {
            get {
                return this.TaxonomyLabelIDField;
            }
            set {
                if ((this.TaxonomyLabelIDField.Equals(value) != true)) {
                    this.TaxonomyLabelIDField = value;
                    this.RaisePropertyChanged("TaxonomyLabelID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VisualizationsServiceReference.IModel", CallbackContract=typeof(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.IModelCallback))]
    public interface IModel {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddVisualization", ReplyAction="http://tempuri.org/IModel/AddVisualizationResponse")]
        void AddVisualization(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddVisualization", ReplyAction="http://tempuri.org/IModel/AddVisualizationResponse")]
        System.IAsyncResult BeginAddVisualization(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization, System.AsyncCallback callback, object asyncState);
        
        void EndAddVisualization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllDataTypes", ReplyAction="http://tempuri.org/IModel/GetAllDataTypesResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[] GetAllDataTypes();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllDataTypes", ReplyAction="http://tempuri.org/IModel/GetAllDataTypesResponse")]
        System.IAsyncResult BeginGetAllDataTypes(System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[] EndGetAllDataTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllProperties", ReplyAction="http://tempuri.org/IModel/GetAllPropertiesResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[] GetAllProperties(string dataType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllProperties", ReplyAction="http://tempuri.org/IModel/GetAllPropertiesResponse")]
        System.IAsyncResult BeginGetAllProperties(string dataType, System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[] EndGetAllProperties(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetDataType", ReplyAction="http://tempuri.org/IModel/GetDataTypeResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType GetDataType(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetDataType", ReplyAction="http://tempuri.org/IModel/GetDataTypeResponse")]
        System.IAsyncResult BeginGetDataType(System.Guid id, System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType EndGetDataType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAssociatedVisualizers", ReplyAction="http://tempuri.org/IModel/GetAssociatedVisualizersResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[] GetAssociatedVisualizers(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAssociatedVisualizers", ReplyAction="http://tempuri.org/IModel/GetAssociatedVisualizersResponse")]
        System.IAsyncResult BeginGetAssociatedVisualizers(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter, System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[] EndGetAssociatedVisualizers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAssociatedSources", ReplyAction="http://tempuri.org/IModel/GetAssociatedSourcesResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[] GetAssociatedSources(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAssociatedSources", ReplyAction="http://tempuri.org/IModel/GetAssociatedSourcesResponse")]
        System.IAsyncResult BeginGetAssociatedSources(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter, System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[] EndGetAssociatedSources(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllVisualizations", ReplyAction="http://tempuri.org/IModel/GetAllVisualizationsResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[] GetAllVisualizations();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllVisualizations", ReplyAction="http://tempuri.org/IModel/GetAllVisualizationsResponse")]
        System.IAsyncResult BeginGetAllVisualizations(System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[] EndGetAllVisualizations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAssociatedVisualizer", ReplyAction="http://tempuri.org/IModel/GetAssociatedVisualizerResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer GetAssociatedVisualizer(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAssociatedVisualizer", ReplyAction="http://tempuri.org/IModel/GetAssociatedVisualizerResponse")]
        System.IAsyncResult BeginGetAssociatedVisualizer(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter, System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer EndGetAssociatedVisualizer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllLabels", ReplyAction="http://tempuri.org/IModel/GetAllLabelsResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] GetAllLabels();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllLabels", ReplyAction="http://tempuri.org/IModel/GetAllLabelsResponse")]
        System.IAsyncResult BeginGetAllLabels(System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] EndGetAllLabels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAssociatedLabels", ReplyAction="http://tempuri.org/IModel/GetAssociatedLabelsResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] GetAssociatedLabels(System.Guid itemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAssociatedLabels", ReplyAction="http://tempuri.org/IModel/GetAssociatedLabelsResponse")]
        System.IAsyncResult BeginGetAssociatedLabels(System.Guid itemID, System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] EndGetAssociatedLabels(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllTaxonomies", ReplyAction="http://tempuri.org/IModel/GetAllTaxonomiesResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[] GetAllTaxonomies();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllTaxonomies", ReplyAction="http://tempuri.org/IModel/GetAllTaxonomiesResponse")]
        System.IAsyncResult BeginGetAllTaxonomies(System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[] EndGetAllTaxonomies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetAllTaxonomyLables", ReplyAction="http://tempuri.org/IModel/GetAllTaxonomyLablesResponse")]
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[] GetAllTaxonomyLables();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetAllTaxonomyLables", ReplyAction="http://tempuri.org/IModel/GetAllTaxonomyLablesResponse")]
        System.IAsyncResult BeginGetAllTaxonomyLables(System.AsyncCallback callback, object asyncState);
        
        Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[] EndGetAllTaxonomyLables(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/PersistLabeledItem", ReplyAction="http://tempuri.org/IModel/PersistLabeledItemResponse")]
        void PersistLabeledItem(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter, System.Guid sourceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/PersistLabeledItem", ReplyAction="http://tempuri.org/IModel/PersistLabeledItemResponse")]
        System.IAsyncResult BeginPersistLabeledItem(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter, System.Guid sourceID, System.AsyncCallback callback, object asyncState);
        
        void EndPersistLabeledItem(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddVisualizationsCallbackReceived", ReplyAction="http://tempuri.org/IModel/AddVisualizationsCallbackReceivedResponse")]
        void AddVisualizationsCallbackReceived();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddVisualizationsCallbackReceived", ReplyAction="http://tempuri.org/IModel/AddVisualizationsCallbackReceivedResponse")]
        System.IAsyncResult BeginAddVisualizationsCallbackReceived(System.AsyncCallback callback, object asyncState);
        
        void EndAddVisualizationsCallbackReceived(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelChannel : Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.IModel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDataTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDataTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssociatedVisualizersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssociatedVisualizersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssociatedSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssociatedSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVisualizationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVisualizationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssociatedVisualizerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssociatedVisualizerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLabelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLabelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssociatedLabelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssociatedLabelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTaxonomiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTaxonomiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTaxonomyLablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTaxonomyLablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelClient : System.ServiceModel.DuplexClientBase<Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.IModel>, Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.IModel {
        
        private BeginOperationDelegate onBeginAddVisualizationDelegate;
        
        private EndOperationDelegate onEndAddVisualizationDelegate;
        
        private System.Threading.SendOrPostCallback onAddVisualizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDataTypesDelegate;
        
        private EndOperationDelegate onEndGetAllDataTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDataTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPropertiesDelegate;
        
        private EndOperationDelegate onEndGetAllPropertiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPropertiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataTypeDelegate;
        
        private EndOperationDelegate onEndGetDataTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssociatedVisualizersDelegate;
        
        private EndOperationDelegate onEndGetAssociatedVisualizersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssociatedVisualizersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssociatedSourcesDelegate;
        
        private EndOperationDelegate onEndGetAssociatedSourcesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssociatedSourcesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVisualizationsDelegate;
        
        private EndOperationDelegate onEndGetAllVisualizationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVisualizationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssociatedVisualizerDelegate;
        
        private EndOperationDelegate onEndGetAssociatedVisualizerDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssociatedVisualizerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLabelsDelegate;
        
        private EndOperationDelegate onEndGetAllLabelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLabelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssociatedLabelsDelegate;
        
        private EndOperationDelegate onEndGetAssociatedLabelsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssociatedLabelsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTaxonomiesDelegate;
        
        private EndOperationDelegate onEndGetAllTaxonomiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTaxonomiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTaxonomyLablesDelegate;
        
        private EndOperationDelegate onEndGetAllTaxonomyLablesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTaxonomyLablesCompletedDelegate;
        
        private BeginOperationDelegate onBeginPersistLabeledItemDelegate;
        
        private EndOperationDelegate onEndPersistLabeledItemDelegate;
        
        private System.Threading.SendOrPostCallback onPersistLabeledItemCompletedDelegate;
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddVisualizationCompleted;
        
        public event System.EventHandler<GetAllDataTypesCompletedEventArgs> GetAllDataTypesCompleted;
        
        public event System.EventHandler<GetAllPropertiesCompletedEventArgs> GetAllPropertiesCompleted;
        
        public event System.EventHandler<GetDataTypeCompletedEventArgs> GetDataTypeCompleted;
        
        public event System.EventHandler<GetAssociatedVisualizersCompletedEventArgs> GetAssociatedVisualizersCompleted;
        
        public event System.EventHandler<GetAssociatedSourcesCompletedEventArgs> GetAssociatedSourcesCompleted;
        
        public event System.EventHandler<GetAllVisualizationsCompletedEventArgs> GetAllVisualizationsCompleted;
        
        public event System.EventHandler<GetAssociatedVisualizerCompletedEventArgs> GetAssociatedVisualizerCompleted;
        
        public event System.EventHandler<GetAllLabelsCompletedEventArgs> GetAllLabelsCompleted;
        
        public event System.EventHandler<GetAssociatedLabelsCompletedEventArgs> GetAssociatedLabelsCompleted;
        
        public event System.EventHandler<GetAllTaxonomiesCompletedEventArgs> GetAllTaxonomiesCompleted;
        
        public event System.EventHandler<GetAllTaxonomyLablesCompletedEventArgs> GetAllTaxonomyLablesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PersistLabeledItemCompleted;
        
        public void AddVisualization(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization) {
            base.Channel.AddVisualization(visualization);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddVisualization(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddVisualization(visualization, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddVisualization(System.IAsyncResult result) {
            base.Channel.EndAddVisualization(result);
        }
        
        private System.IAsyncResult OnBeginAddVisualization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization = ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization)(inValues[0]));
            return this.BeginAddVisualization(visualization, callback, asyncState);
        }
        
        private object[] OnEndAddVisualization(System.IAsyncResult result) {
            this.EndAddVisualization(result);
            return null;
        }
        
        private void OnAddVisualizationCompleted(object state) {
            if ((this.AddVisualizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddVisualizationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddVisualizationAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization) {
            this.AddVisualizationAsync(visualization, null);
        }
        
        public void AddVisualizationAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization visualization, object userState) {
            if ((this.onBeginAddVisualizationDelegate == null)) {
                this.onBeginAddVisualizationDelegate = new BeginOperationDelegate(this.OnBeginAddVisualization);
            }
            if ((this.onEndAddVisualizationDelegate == null)) {
                this.onEndAddVisualizationDelegate = new EndOperationDelegate(this.OnEndAddVisualization);
            }
            if ((this.onAddVisualizationCompletedDelegate == null)) {
                this.onAddVisualizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddVisualizationCompleted);
            }
            base.InvokeAsync(this.onBeginAddVisualizationDelegate, new object[] {
                        visualization}, this.onEndAddVisualizationDelegate, this.onAddVisualizationCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[] GetAllDataTypes() {
            return base.Channel.GetAllDataTypes();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllDataTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDataTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[] EndGetAllDataTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAllDataTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDataTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllDataTypes(callback, asyncState);
        }
        
        private object[] OnEndGetAllDataTypes(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType[] retVal = this.EndGetAllDataTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDataTypesCompleted(object state) {
            if ((this.GetAllDataTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDataTypesCompleted(this, new GetAllDataTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDataTypesAsync() {
            this.GetAllDataTypesAsync(null);
        }
        
        public void GetAllDataTypesAsync(object userState) {
            if ((this.onBeginGetAllDataTypesDelegate == null)) {
                this.onBeginGetAllDataTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAllDataTypes);
            }
            if ((this.onEndGetAllDataTypesDelegate == null)) {
                this.onEndGetAllDataTypesDelegate = new EndOperationDelegate(this.OnEndGetAllDataTypes);
            }
            if ((this.onGetAllDataTypesCompletedDelegate == null)) {
                this.onGetAllDataTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDataTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDataTypesDelegate, null, this.onEndGetAllDataTypesDelegate, this.onGetAllDataTypesCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[] GetAllProperties(string dataType) {
            return base.Channel.GetAllProperties(dataType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProperties(string dataType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProperties(dataType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[] EndGetAllProperties(System.IAsyncResult result) {
            return base.Channel.EndGetAllProperties(result);
        }
        
        private System.IAsyncResult OnBeginGetAllProperties(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dataType = ((string)(inValues[0]));
            return this.BeginGetAllProperties(dataType, callback, asyncState);
        }
        
        private object[] OnEndGetAllProperties(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType[] retVal = this.EndGetAllProperties(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPropertiesCompleted(object state) {
            if ((this.GetAllPropertiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPropertiesCompleted(this, new GetAllPropertiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPropertiesAsync(string dataType) {
            this.GetAllPropertiesAsync(dataType, null);
        }
        
        public void GetAllPropertiesAsync(string dataType, object userState) {
            if ((this.onBeginGetAllPropertiesDelegate == null)) {
                this.onBeginGetAllPropertiesDelegate = new BeginOperationDelegate(this.OnBeginGetAllProperties);
            }
            if ((this.onEndGetAllPropertiesDelegate == null)) {
                this.onEndGetAllPropertiesDelegate = new EndOperationDelegate(this.OnEndGetAllProperties);
            }
            if ((this.onGetAllPropertiesCompletedDelegate == null)) {
                this.onGetAllPropertiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPropertiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPropertiesDelegate, new object[] {
                        dataType}, this.onEndGetAllPropertiesDelegate, this.onGetAllPropertiesCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType GetDataType(System.Guid id) {
            return base.Channel.GetDataType(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataType(System.Guid id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataType(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType EndGetDataType(System.IAsyncResult result) {
            return base.Channel.EndGetDataType(result);
        }
        
        private System.IAsyncResult OnBeginGetDataType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid id = ((System.Guid)(inValues[0]));
            return this.BeginGetDataType(id, callback, asyncState);
        }
        
        private object[] OnEndGetDataType(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType retVal = this.EndGetDataType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataTypeCompleted(object state) {
            if ((this.GetDataTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataTypeCompleted(this, new GetDataTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataTypeAsync(System.Guid id) {
            this.GetDataTypeAsync(id, null);
        }
        
        public void GetDataTypeAsync(System.Guid id, object userState) {
            if ((this.onBeginGetDataTypeDelegate == null)) {
                this.onBeginGetDataTypeDelegate = new BeginOperationDelegate(this.OnBeginGetDataType);
            }
            if ((this.onEndGetDataTypeDelegate == null)) {
                this.onEndGetDataTypeDelegate = new EndOperationDelegate(this.OnEndGetDataType);
            }
            if ((this.onGetDataTypeCompletedDelegate == null)) {
                this.onGetDataTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataTypeDelegate, new object[] {
                        id}, this.onEndGetDataTypeDelegate, this.onGetDataTypeCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[] GetAssociatedVisualizers(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter) {
            return base.Channel.GetAssociatedVisualizers(adapter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssociatedVisualizers(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssociatedVisualizers(adapter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[] EndGetAssociatedVisualizers(System.IAsyncResult result) {
            return base.Channel.EndGetAssociatedVisualizers(result);
        }
        
        private System.IAsyncResult OnBeginGetAssociatedVisualizers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter = ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType)(inValues[0]));
            return this.BeginGetAssociatedVisualizers(adapter, callback, asyncState);
        }
        
        private object[] OnEndGetAssociatedVisualizers(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer[] retVal = this.EndGetAssociatedVisualizers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssociatedVisualizersCompleted(object state) {
            if ((this.GetAssociatedVisualizersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssociatedVisualizersCompleted(this, new GetAssociatedVisualizersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssociatedVisualizersAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter) {
            this.GetAssociatedVisualizersAsync(adapter, null);
        }
        
        public void GetAssociatedVisualizersAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.PropertyType adapter, object userState) {
            if ((this.onBeginGetAssociatedVisualizersDelegate == null)) {
                this.onBeginGetAssociatedVisualizersDelegate = new BeginOperationDelegate(this.OnBeginGetAssociatedVisualizers);
            }
            if ((this.onEndGetAssociatedVisualizersDelegate == null)) {
                this.onEndGetAssociatedVisualizersDelegate = new EndOperationDelegate(this.OnEndGetAssociatedVisualizers);
            }
            if ((this.onGetAssociatedVisualizersCompletedDelegate == null)) {
                this.onGetAssociatedVisualizersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssociatedVisualizersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssociatedVisualizersDelegate, new object[] {
                        adapter}, this.onEndGetAssociatedVisualizersDelegate, this.onGetAssociatedVisualizersCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[] GetAssociatedSources(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter) {
            return base.Channel.GetAssociatedSources(adapter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssociatedSources(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssociatedSources(adapter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[] EndGetAssociatedSources(System.IAsyncResult result) {
            return base.Channel.EndGetAssociatedSources(result);
        }
        
        private System.IAsyncResult OnBeginGetAssociatedSources(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter = ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType)(inValues[0]));
            return this.BeginGetAssociatedSources(adapter, callback, asyncState);
        }
        
        private object[] OnEndGetAssociatedSources(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Source[] retVal = this.EndGetAssociatedSources(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssociatedSourcesCompleted(object state) {
            if ((this.GetAssociatedSourcesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssociatedSourcesCompleted(this, new GetAssociatedSourcesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssociatedSourcesAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter) {
            this.GetAssociatedSourcesAsync(adapter, null);
        }
        
        public void GetAssociatedSourcesAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.DataType adapter, object userState) {
            if ((this.onBeginGetAssociatedSourcesDelegate == null)) {
                this.onBeginGetAssociatedSourcesDelegate = new BeginOperationDelegate(this.OnBeginGetAssociatedSources);
            }
            if ((this.onEndGetAssociatedSourcesDelegate == null)) {
                this.onEndGetAssociatedSourcesDelegate = new EndOperationDelegate(this.OnEndGetAssociatedSources);
            }
            if ((this.onGetAssociatedSourcesCompletedDelegate == null)) {
                this.onGetAssociatedSourcesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssociatedSourcesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssociatedSourcesDelegate, new object[] {
                        adapter}, this.onEndGetAssociatedSourcesDelegate, this.onGetAssociatedSourcesCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[] GetAllVisualizations() {
            return base.Channel.GetAllVisualizations();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllVisualizations(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVisualizations(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[] EndGetAllVisualizations(System.IAsyncResult result) {
            return base.Channel.EndGetAllVisualizations(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVisualizations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllVisualizations(callback, asyncState);
        }
        
        private object[] OnEndGetAllVisualizations(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization[] retVal = this.EndGetAllVisualizations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVisualizationsCompleted(object state) {
            if ((this.GetAllVisualizationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVisualizationsCompleted(this, new GetAllVisualizationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVisualizationsAsync() {
            this.GetAllVisualizationsAsync(null);
        }
        
        public void GetAllVisualizationsAsync(object userState) {
            if ((this.onBeginGetAllVisualizationsDelegate == null)) {
                this.onBeginGetAllVisualizationsDelegate = new BeginOperationDelegate(this.OnBeginGetAllVisualizations);
            }
            if ((this.onEndGetAllVisualizationsDelegate == null)) {
                this.onEndGetAllVisualizationsDelegate = new EndOperationDelegate(this.OnEndGetAllVisualizations);
            }
            if ((this.onGetAllVisualizationsCompletedDelegate == null)) {
                this.onGetAllVisualizationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVisualizationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVisualizationsDelegate, null, this.onEndGetAllVisualizationsDelegate, this.onGetAllVisualizationsCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer GetAssociatedVisualizer(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter) {
            return base.Channel.GetAssociatedVisualizer(adapter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssociatedVisualizer(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssociatedVisualizer(adapter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer EndGetAssociatedVisualizer(System.IAsyncResult result) {
            return base.Channel.EndGetAssociatedVisualizer(result);
        }
        
        private System.IAsyncResult OnBeginGetAssociatedVisualizer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter = ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization)(inValues[0]));
            return this.BeginGetAssociatedVisualizer(adapter, callback, asyncState);
        }
        
        private object[] OnEndGetAssociatedVisualizer(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualizer retVal = this.EndGetAssociatedVisualizer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssociatedVisualizerCompleted(object state) {
            if ((this.GetAssociatedVisualizerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssociatedVisualizerCompleted(this, new GetAssociatedVisualizerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssociatedVisualizerAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter) {
            this.GetAssociatedVisualizerAsync(adapter, null);
        }
        
        public void GetAssociatedVisualizerAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Visualization adapter, object userState) {
            if ((this.onBeginGetAssociatedVisualizerDelegate == null)) {
                this.onBeginGetAssociatedVisualizerDelegate = new BeginOperationDelegate(this.OnBeginGetAssociatedVisualizer);
            }
            if ((this.onEndGetAssociatedVisualizerDelegate == null)) {
                this.onEndGetAssociatedVisualizerDelegate = new EndOperationDelegate(this.OnEndGetAssociatedVisualizer);
            }
            if ((this.onGetAssociatedVisualizerCompletedDelegate == null)) {
                this.onGetAssociatedVisualizerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssociatedVisualizerCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssociatedVisualizerDelegate, new object[] {
                        adapter}, this.onEndGetAssociatedVisualizerDelegate, this.onGetAssociatedVisualizerCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] GetAllLabels() {
            return base.Channel.GetAllLabels();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllLabels(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLabels(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] EndGetAllLabels(System.IAsyncResult result) {
            return base.Channel.EndGetAllLabels(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLabels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllLabels(callback, asyncState);
        }
        
        private object[] OnEndGetAllLabels(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] retVal = this.EndGetAllLabels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLabelsCompleted(object state) {
            if ((this.GetAllLabelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLabelsCompleted(this, new GetAllLabelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLabelsAsync() {
            this.GetAllLabelsAsync(null);
        }
        
        public void GetAllLabelsAsync(object userState) {
            if ((this.onBeginGetAllLabelsDelegate == null)) {
                this.onBeginGetAllLabelsDelegate = new BeginOperationDelegate(this.OnBeginGetAllLabels);
            }
            if ((this.onEndGetAllLabelsDelegate == null)) {
                this.onEndGetAllLabelsDelegate = new EndOperationDelegate(this.OnEndGetAllLabels);
            }
            if ((this.onGetAllLabelsCompletedDelegate == null)) {
                this.onGetAllLabelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLabelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLabelsDelegate, null, this.onEndGetAllLabelsDelegate, this.onGetAllLabelsCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] GetAssociatedLabels(System.Guid itemID) {
            return base.Channel.GetAssociatedLabels(itemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAssociatedLabels(System.Guid itemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssociatedLabels(itemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] EndGetAssociatedLabels(System.IAsyncResult result) {
            return base.Channel.EndGetAssociatedLabels(result);
        }
        
        private System.IAsyncResult OnBeginGetAssociatedLabels(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid itemID = ((System.Guid)(inValues[0]));
            return this.BeginGetAssociatedLabels(itemID, callback, asyncState);
        }
        
        private object[] OnEndGetAssociatedLabels(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Label[] retVal = this.EndGetAssociatedLabels(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssociatedLabelsCompleted(object state) {
            if ((this.GetAssociatedLabelsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssociatedLabelsCompleted(this, new GetAssociatedLabelsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssociatedLabelsAsync(System.Guid itemID) {
            this.GetAssociatedLabelsAsync(itemID, null);
        }
        
        public void GetAssociatedLabelsAsync(System.Guid itemID, object userState) {
            if ((this.onBeginGetAssociatedLabelsDelegate == null)) {
                this.onBeginGetAssociatedLabelsDelegate = new BeginOperationDelegate(this.OnBeginGetAssociatedLabels);
            }
            if ((this.onEndGetAssociatedLabelsDelegate == null)) {
                this.onEndGetAssociatedLabelsDelegate = new EndOperationDelegate(this.OnEndGetAssociatedLabels);
            }
            if ((this.onGetAssociatedLabelsCompletedDelegate == null)) {
                this.onGetAssociatedLabelsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssociatedLabelsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssociatedLabelsDelegate, new object[] {
                        itemID}, this.onEndGetAssociatedLabelsDelegate, this.onGetAssociatedLabelsCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[] GetAllTaxonomies() {
            return base.Channel.GetAllTaxonomies();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTaxonomies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTaxonomies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[] EndGetAllTaxonomies(System.IAsyncResult result) {
            return base.Channel.EndGetAllTaxonomies(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTaxonomies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTaxonomies(callback, asyncState);
        }
        
        private object[] OnEndGetAllTaxonomies(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.Taxonomy[] retVal = this.EndGetAllTaxonomies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTaxonomiesCompleted(object state) {
            if ((this.GetAllTaxonomiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTaxonomiesCompleted(this, new GetAllTaxonomiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTaxonomiesAsync() {
            this.GetAllTaxonomiesAsync(null);
        }
        
        public void GetAllTaxonomiesAsync(object userState) {
            if ((this.onBeginGetAllTaxonomiesDelegate == null)) {
                this.onBeginGetAllTaxonomiesDelegate = new BeginOperationDelegate(this.OnBeginGetAllTaxonomies);
            }
            if ((this.onEndGetAllTaxonomiesDelegate == null)) {
                this.onEndGetAllTaxonomiesDelegate = new EndOperationDelegate(this.OnEndGetAllTaxonomies);
            }
            if ((this.onGetAllTaxonomiesCompletedDelegate == null)) {
                this.onGetAllTaxonomiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTaxonomiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTaxonomiesDelegate, null, this.onEndGetAllTaxonomiesDelegate, this.onGetAllTaxonomiesCompletedDelegate, userState);
        }
        
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[] GetAllTaxonomyLables() {
            return base.Channel.GetAllTaxonomyLables();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllTaxonomyLables(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTaxonomyLables(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[] EndGetAllTaxonomyLables(System.IAsyncResult result) {
            return base.Channel.EndGetAllTaxonomyLables(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTaxonomyLables(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllTaxonomyLables(callback, asyncState);
        }
        
        private object[] OnEndGetAllTaxonomyLables(System.IAsyncResult result) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.TaxonomyLabel[] retVal = this.EndGetAllTaxonomyLables(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTaxonomyLablesCompleted(object state) {
            if ((this.GetAllTaxonomyLablesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTaxonomyLablesCompleted(this, new GetAllTaxonomyLablesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTaxonomyLablesAsync() {
            this.GetAllTaxonomyLablesAsync(null);
        }
        
        public void GetAllTaxonomyLablesAsync(object userState) {
            if ((this.onBeginGetAllTaxonomyLablesDelegate == null)) {
                this.onBeginGetAllTaxonomyLablesDelegate = new BeginOperationDelegate(this.OnBeginGetAllTaxonomyLables);
            }
            if ((this.onEndGetAllTaxonomyLablesDelegate == null)) {
                this.onEndGetAllTaxonomyLablesDelegate = new EndOperationDelegate(this.OnEndGetAllTaxonomyLables);
            }
            if ((this.onGetAllTaxonomyLablesCompletedDelegate == null)) {
                this.onGetAllTaxonomyLablesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTaxonomyLablesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTaxonomyLablesDelegate, null, this.onEndGetAllTaxonomyLablesDelegate, this.onGetAllTaxonomyLablesCompletedDelegate, userState);
        }
        
        public void PersistLabeledItem(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter, System.Guid sourceID) {
            base.Channel.PersistLabeledItem(adapter, sourceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPersistLabeledItem(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter, System.Guid sourceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPersistLabeledItem(adapter, sourceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPersistLabeledItem(System.IAsyncResult result) {
            base.Channel.EndPersistLabeledItem(result);
        }
        
        private System.IAsyncResult OnBeginPersistLabeledItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter = ((Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter)(inValues[0]));
            System.Guid sourceID = ((System.Guid)(inValues[1]));
            return this.BeginPersistLabeledItem(adapter, sourceID, callback, asyncState);
        }
        
        private object[] OnEndPersistLabeledItem(System.IAsyncResult result) {
            this.EndPersistLabeledItem(result);
            return null;
        }
        
        private void OnPersistLabeledItemCompleted(object state) {
            if ((this.PersistLabeledItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PersistLabeledItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PersistLabeledItemAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter, System.Guid sourceID) {
            this.PersistLabeledItemAsync(adapter, sourceID, null);
        }
        
        public void PersistLabeledItemAsync(Construct.UX.ViewModels.Visualizations.VisualizationsServiceReference.LabeledItemAdapter adapter, System.Guid sourceID, object userState) {
            if ((this.onBeginPersistLabeledItemDelegate == null)) {
                this.onBeginPersistLabeledItemDelegate = new BeginOperationDelegate(this.OnBeginPersistLabeledItem);
            }
            if ((this.onEndPersistLabeledItemDelegate == null)) {
                this.onEndPersistLabeledItemDelegate = new EndOperationDelegate(this.OnEndPersistLabeledItem);
            }
            if ((this.onPersistLabeledItemCompletedDelegate == null)) {
                this.onPersistLabeledItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPersistLabeledItemCompleted);
            }
            base.InvokeAsync(this.onBeginPersistLabeledItemDelegate, new object[] {
                        adapter,
                        sourceID}, this.onEndPersistLabeledItemDelegate, this.onPersistLabeledItemCompletedDelegate, userState);
        }
    }
}
