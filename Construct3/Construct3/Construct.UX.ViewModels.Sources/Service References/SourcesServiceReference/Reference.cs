//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Construct.UX.ViewModels.Sources.SourcesServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sensor", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Sensor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentRendezvousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstalledFromServerDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHealthyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorHostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorTypeSourceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentRendezvous {
            get {
                return this.CurrentRendezvousField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentRendezvousField, value) != true)) {
                    this.CurrentRendezvousField = value;
                    this.RaisePropertyChanged("CurrentRendezvous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstalledFromServerDate {
            get {
                return this.InstalledFromServerDateField;
            }
            set {
                if ((this.InstalledFromServerDateField.Equals(value) != true)) {
                    this.InstalledFromServerDateField = value;
                    this.RaisePropertyChanged("InstalledFromServerDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHealthy {
            get {
                return this.IsHealthyField;
            }
            set {
                if ((this.IsHealthyField.Equals(value) != true)) {
                    this.IsHealthyField = value;
                    this.RaisePropertyChanged("IsHealthy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorHostID {
            get {
                return this.SensorHostIDField;
            }
            set {
                if ((this.SensorHostIDField.Equals(value) != true)) {
                    this.SensorHostIDField = value;
                    this.RaisePropertyChanged("SensorHostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((this.SensorTypeSourceIDField.Equals(value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddSensorArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class AddSensorArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DownloadUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HumanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverwriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZippedFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DownloadUri {
            get {
                return this.DownloadUriField;
            }
            set {
                if ((object.ReferenceEquals(this.DownloadUriField, value) != true)) {
                    this.DownloadUriField = value;
                    this.RaisePropertyChanged("DownloadUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HumanName {
            get {
                return this.HumanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HumanNameField, value) != true)) {
                    this.HumanNameField = value;
                    this.RaisePropertyChanged("HumanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Overwrite {
            get {
                return this.OverwriteField;
            }
            set {
                if ((object.ReferenceEquals(this.OverwriteField, value) != true)) {
                    this.OverwriteField = value;
                    this.RaisePropertyChanged("Overwrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZippedFileName {
            get {
                return this.ZippedFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ZippedFileNameField, value) != true)) {
                    this.ZippedFileNameField = value;
                    this.RaisePropertyChanged("ZippedFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinqExpressionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PropertyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeID {
            get {
                return this.DataTypeIDField;
            }
            set {
                if ((this.DataTypeIDField.Equals(value) != true)) {
                    this.DataTypeIDField = value;
                    this.RaisePropertyChanged("DataTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinqExpression {
            get {
                return this.LinqExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.LinqExpressionField, value) != true)) {
                    this.LinqExpressionField = value;
                    this.RaisePropertyChanged("LinqExpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddQuestionArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class AddQuestionArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temp {
            get {
                return this.TempField;
            }
            set {
                if ((object.ReferenceEquals(this.TempField, value) != true)) {
                    this.TempField = value;
                    this.RaisePropertyChanged("Temp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorHost", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SensorHost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHealthyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorHostTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostUri {
            get {
                return this.HostUriField;
            }
            set {
                if ((object.ReferenceEquals(this.HostUriField, value) != true)) {
                    this.HostUriField = value;
                    this.RaisePropertyChanged("HostUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHealthy {
            get {
                return this.IsHealthyField;
            }
            set {
                if ((this.IsHealthyField.Equals(value) != true)) {
                    this.IsHealthyField = value;
                    this.RaisePropertyChanged("IsHealthy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorHostTypeID {
            get {
                return this.SensorHostTypeIDField;
            }
            set {
                if ((this.SensorHostTypeIDField.Equals(value) != true)) {
                    this.SensorHostTypeIDField = value;
                    this.RaisePropertyChanged("SensorHostTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorRuntime", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SensorRuntime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallerUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallerXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] InstallerZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RecCreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheUri {
            get {
                return this.CacheUriField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheUriField, value) != true)) {
                    this.CacheUriField = value;
                    this.RaisePropertyChanged("CacheUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallerUri {
            get {
                return this.InstallerUriField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallerUriField, value) != true)) {
                    this.InstallerUriField = value;
                    this.RaisePropertyChanged("InstallerUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallerXml {
            get {
                return this.InstallerXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallerXmlField, value) != true)) {
                    this.InstallerXmlField = value;
                    this.RaisePropertyChanged("InstallerXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] InstallerZip {
            get {
                return this.InstallerZipField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallerZipField, value) != true)) {
                    this.InstallerZipField = value;
                    this.RaisePropertyChanged("InstallerZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RecCreationDate {
            get {
                return this.RecCreationDateField;
            }
            set {
                if ((this.RecCreationDateField.Equals(value) != true)) {
                    this.RecCreationDateField = value;
                    this.RaisePropertyChanged("RecCreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((this.SensorTypeSourceIDField.Equals(value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadSensorArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class LoadSensorArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartupArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostID {
            get {
                return this.HostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIDField, value) != true)) {
                    this.HostIDField = value;
                    this.RaisePropertyChanged("HostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeSourceIDField, value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIDField, value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartupArgs {
            get {
                return this.StartupArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.StartupArgsField, value) != true)) {
                    this.StartupArgsField = value;
                    this.RaisePropertyChanged("StartupArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnloadSensorArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class UnloadSensorArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostID {
            get {
                return this.HostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIDField, value) != true)) {
                    this.HostIDField = value;
                    this.RaisePropertyChanged("HostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeSourceIDField, value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIDField, value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartSensorArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class StartSensorArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostID {
            get {
                return this.HostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIDField, value) != true)) {
                    this.HostIDField = value;
                    this.RaisePropertyChanged("HostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeSourceIDField, value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIDField, value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StopSensorArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class StopSensorArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostID {
            get {
                return this.HostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HostIDField, value) != true)) {
                    this.HostIDField = value;
                    this.RaisePropertyChanged("HostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTypeSourceIDField, value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIDField, value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericSensorCommandArgs", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Models.Sources")]
    [System.SerializableAttribute()]
    public partial class GenericSensorCommandArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ArgsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorRendezvousField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ArgsList {
            get {
                return this.ArgsListField;
            }
            set {
                if ((object.ReferenceEquals(this.ArgsListField, value) != true)) {
                    this.ArgsListField = value;
                    this.RaisePropertyChanged("ArgsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandName {
            get {
                return this.CommandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandNameField, value) != true)) {
                    this.CommandNameField = value;
                    this.RaisePropertyChanged("CommandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorRendezvous {
            get {
                return this.SensorRendezvousField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorRendezvousField, value) != true)) {
                    this.SensorRendezvousField = value;
                    this.RaisePropertyChanged("SensorRendezvous");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HumanReadableSensor", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class HumanReadableSensor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentRendezvousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstalledFromServerDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHealthyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorHostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorTypeSourceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentRendezvous {
            get {
                return this.CurrentRendezvousField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentRendezvousField, value) != true)) {
                    this.CurrentRendezvousField = value;
                    this.RaisePropertyChanged("CurrentRendezvous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstalledFromServerDate {
            get {
                return this.InstalledFromServerDateField;
            }
            set {
                if ((this.InstalledFromServerDateField.Equals(value) != true)) {
                    this.InstalledFromServerDateField = value;
                    this.RaisePropertyChanged("InstalledFromServerDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHealthy {
            get {
                return this.IsHealthyField;
            }
            set {
                if ((this.IsHealthyField.Equals(value) != true)) {
                    this.IsHealthyField = value;
                    this.RaisePropertyChanged("IsHealthy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorHostID {
            get {
                return this.SensorHostIDField;
            }
            set {
                if ((this.SensorHostIDField.Equals(value) != true)) {
                    this.SensorHostIDField = value;
                    this.RaisePropertyChanged("SensorHostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((this.SensorTypeSourceIDField.Equals(value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorCommand", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SensorCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorCommandParameter> SensorCommandParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorTypeSourceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandName {
            get {
                return this.CommandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandNameField, value) != true)) {
                    this.CommandNameField = value;
                    this.RaisePropertyChanged("CommandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorCommandParameter> SensorCommandParameters {
            get {
                return this.SensorCommandParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorCommandParametersField, value) != true)) {
                    this.SensorCommandParametersField = value;
                    this.RaisePropertyChanged("SensorCommandParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorTypeSourceID {
            get {
                return this.SensorTypeSourceIDField;
            }
            set {
                if ((this.SensorTypeSourceIDField.Equals(value) != true)) {
                    this.SensorTypeSourceIDField = value;
                    this.RaisePropertyChanged("SensorTypeSourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorCommandParameter", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SensorCommandParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorCommandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorCommandID {
            get {
                return this.SensorCommandIDField;
            }
            set {
                if ((this.SensorCommandIDField.Equals(value) != true)) {
                    this.SensorCommandIDField = value;
                    this.RaisePropertyChanged("SensorCommandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class DataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCoreTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeParentID {
            get {
                return this.DataTypeParentIDField;
            }
            set {
                if ((this.DataTypeParentIDField.Equals(value) != true)) {
                    this.DataTypeParentIDField = value;
                    this.RaisePropertyChanged("DataTypeParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCoreType {
            get {
                return this.IsCoreTypeField;
            }
            set {
                if ((this.IsCoreTypeField.Equals(value) != true)) {
                    this.IsCoreTypeField = value;
                    this.RaisePropertyChanged("IsCoreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorHostType", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SensorHostType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorHostTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategory {
            get {
                return this.IsCategoryField;
            }
            set {
                if ((this.IsCategoryField.Equals(value) != true)) {
                    this.IsCategoryField = value;
                    this.RaisePropertyChanged("IsCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorHostTypeName {
            get {
                return this.SensorHostTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorHostTypeNameField, value) != true)) {
                    this.SensorHostTypeNameField = value;
                    this.RaisePropertyChanged("SensorHostTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTypeSource", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class DataTypeSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategory {
            get {
                return this.IsCategoryField;
            }
            set {
                if ((this.IsCategoryField.Equals(value) != true)) {
                    this.IsCategoryField = value;
                    this.RaisePropertyChanged("IsCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorTypeSource", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SensorTypeSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SensorHostTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCategory {
            get {
                return this.IsCategoryField;
            }
            set {
                if ((this.IsCategoryField.Equals(value) != true)) {
                    this.IsCategoryField = value;
                    this.RaisePropertyChanged("IsCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReadOnly {
            get {
                return this.IsReadOnlyField;
            }
            set {
                if ((this.IsReadOnlyField.Equals(value) != true)) {
                    this.IsReadOnlyField = value;
                    this.RaisePropertyChanged("IsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SensorHostTypeID {
            get {
                return this.SensorHostTypeIDField;
            }
            set {
                if ((this.SensorHostTypeIDField.Equals(value) != true)) {
                    this.SensorHostTypeIDField = value;
                    this.RaisePropertyChanged("SensorHostTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Source : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SourcesServiceReference.IModel", CallbackContract=typeof(Construct.UX.ViewModels.Sources.SourcesServiceReference.IModelCallback))]
    public interface IModel {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddSensor", ReplyAction="http://tempuri.org/IModel/AddSensorResponse")]
        bool AddSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.Sensor sensor, Construct.UX.ViewModels.Sources.SourcesServiceReference.AddSensorArgs addArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddQuestion", ReplyAction="http://tempuri.org/IModel/AddQuestionResponse")]
        bool AddQuestion(Construct.UX.ViewModels.Sources.SourcesServiceReference.Question question, Construct.UX.ViewModels.Sources.SourcesServiceReference.AddQuestionArgs addArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddSensorHost", ReplyAction="http://tempuri.org/IModel/AddSensorHostResponse")]
        bool AddSensorHost(Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorHost sensorHost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddSensorDefinition", ReplyAction="http://tempuri.org/IModel/AddSensorDefinitionResponse")]
        bool AddSensorDefinition(Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorRuntime sensorRuntime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/LoadSensor", ReplyAction="http://tempuri.org/IModel/LoadSensorResponse")]
        void LoadSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.LoadSensorArgs loadArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/UnloadSensor", ReplyAction="http://tempuri.org/IModel/UnloadSensorResponse")]
        void UnloadSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.UnloadSensorArgs unloadArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/StartSensor", ReplyAction="http://tempuri.org/IModel/StartSensorResponse")]
        void StartSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.StartSensorArgs startArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/StopSensor", ReplyAction="http://tempuri.org/IModel/StopSensorResponse")]
        void StopSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.StopSensorArgs stopArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/InvokeGenericCommand", ReplyAction="http://tempuri.org/IModel/InvokeGenericCommandResponse")]
        void InvokeGenericCommand(Construct.UX.ViewModels.Sources.SourcesServiceReference.GenericSensorCommandArgs commandArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensors", ReplyAction="http://tempuri.org/IModel/GetSensorsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.Sensor> GetSensors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetHumanReadableSensors", ReplyAction="http://tempuri.org/IModel/GetHumanReadableSensorsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.HumanReadableSensor> GetHumanReadableSensors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensorCommands", ReplyAction="http://tempuri.org/IModel/GetSensorCommandsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorCommand> GetSensorCommands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetDataTypes", ReplyAction="http://tempuri.org/IModel/GetDataTypesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.DataType> GetDataTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensorHosts", ReplyAction="http://tempuri.org/IModel/GetSensorHostsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorHost> GetSensorHosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensorHostTypes", ReplyAction="http://tempuri.org/IModel/GetSensorHostTypesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorHostType> GetSensorHostTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetDataTypeSources", ReplyAction="http://tempuri.org/IModel/GetDataTypeSourcesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.DataTypeSource> GetDataTypeSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensorTypeSources", ReplyAction="http://tempuri.org/IModel/GetSensorTypeSourcesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorTypeSource> GetSensorTypeSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensorRuntimes", ReplyAction="http://tempuri.org/IModel/GetSensorRuntimesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorRuntime> GetSensorRuntimes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSources", ReplyAction="http://tempuri.org/IModel/GetSourcesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.Source> GetSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSensorsEmittingType", ReplyAction="http://tempuri.org/IModel/GetSensorsEmittingTypeResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.Sensor> GetSensorsEmittingType(Construct.UX.ViewModels.Sources.SourcesServiceReference.DataType dataType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/SensorLoadedCallbackReceived", ReplyAction="http://tempuri.org/IModel/SensorLoadedCallbackReceivedResponse")]
        void SensorLoadedCallbackReceived(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/SensorInstalledCallbackReceived", ReplyAction="http://tempuri.org/IModel/SensorInstalledCallbackReceivedResponse")]
        void SensorInstalledCallbackReceived(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AvailableSensorCommandsCallbackReceived", ReplyAction="http://tempuri.org/IModel/AvailableSensorCommandsCallbackReceivedResponse")]
        void AvailableSensorCommandsCallbackReceived(System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorCommand> commands);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelChannel : Construct.UX.ViewModels.Sources.SourcesServiceReference.IModel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelClient : System.ServiceModel.DuplexClientBase<Construct.UX.ViewModels.Sources.SourcesServiceReference.IModel>, Construct.UX.ViewModels.Sources.SourcesServiceReference.IModel {
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool AddSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.Sensor sensor, Construct.UX.ViewModels.Sources.SourcesServiceReference.AddSensorArgs addArgs) {
            return base.Channel.AddSensor(sensor, addArgs);
        }
        
        public bool AddQuestion(Construct.UX.ViewModels.Sources.SourcesServiceReference.Question question, Construct.UX.ViewModels.Sources.SourcesServiceReference.AddQuestionArgs addArgs) {
            return base.Channel.AddQuestion(question, addArgs);
        }
        
        public bool AddSensorHost(Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorHost sensorHost) {
            return base.Channel.AddSensorHost(sensorHost);
        }
        
        public bool AddSensorDefinition(Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorRuntime sensorRuntime) {
            return base.Channel.AddSensorDefinition(sensorRuntime);
        }
        
        public void LoadSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.LoadSensorArgs loadArgs) {
            base.Channel.LoadSensor(loadArgs);
        }
        
        public void UnloadSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.UnloadSensorArgs unloadArgs) {
            base.Channel.UnloadSensor(unloadArgs);
        }
        
        public void StartSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.StartSensorArgs startArgs) {
            base.Channel.StartSensor(startArgs);
        }
        
        public void StopSensor(Construct.UX.ViewModels.Sources.SourcesServiceReference.StopSensorArgs stopArgs) {
            base.Channel.StopSensor(stopArgs);
        }
        
        public void InvokeGenericCommand(Construct.UX.ViewModels.Sources.SourcesServiceReference.GenericSensorCommandArgs commandArgs) {
            base.Channel.InvokeGenericCommand(commandArgs);
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.Sensor> GetSensors() {
            return base.Channel.GetSensors();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.HumanReadableSensor> GetHumanReadableSensors() {
            return base.Channel.GetHumanReadableSensors();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorCommand> GetSensorCommands() {
            return base.Channel.GetSensorCommands();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.DataType> GetDataTypes() {
            return base.Channel.GetDataTypes();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorHost> GetSensorHosts() {
            return base.Channel.GetSensorHosts();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorHostType> GetSensorHostTypes() {
            return base.Channel.GetSensorHostTypes();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.DataTypeSource> GetDataTypeSources() {
            return base.Channel.GetDataTypeSources();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorTypeSource> GetSensorTypeSources() {
            return base.Channel.GetSensorTypeSources();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.SensorRuntime> GetSensorRuntimes() {
            return base.Channel.GetSensorRuntimes();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.Source> GetSources() {
            return base.Channel.GetSources();
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sources.SourcesServiceReference.Sensor> GetSensorsEmittingType(Construct.UX.ViewModels.Sources.SourcesServiceReference.DataType dataType) {
            return base.Channel.GetSensorsEmittingType(dataType);
        }
    }
}
