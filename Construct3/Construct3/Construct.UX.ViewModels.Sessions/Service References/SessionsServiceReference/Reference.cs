//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Construct.UX.ViewModels.Sessions.SessionsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyName {
            get {
                return this.FriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                    this.FriendlyNameField = value;
                    this.RaisePropertyChanged("FriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionSource", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class SessionSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schemas.datacontract.org/2004/07/Construct.Server.Entities.Adapters")]
    [System.SerializableAttribute()]
    public partial class Source : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DataTypeSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DataTypeSourceID {
            get {
                return this.DataTypeSourceIDField;
            }
            set {
                if ((this.DataTypeSourceIDField.Equals(value) != true)) {
                    this.DataTypeSourceIDField = value;
                    this.RaisePropertyChanged("DataTypeSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionsServiceReference.IModel", CallbackContract=typeof(Construct.UX.ViewModels.Sessions.SessionsServiceReference.IModelCallback))]
    public interface IModel {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddSession", ReplyAction="http://tempuri.org/IModel/AddSessionResponse")]
        bool AddSession(Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddSession", ReplyAction="http://tempuri.org/IModel/AddSessionResponse")]
        System.IAsyncResult BeginAddSession(Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session, System.AsyncCallback callback, object asyncState);
        
        bool EndAddSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddSessionSource", ReplyAction="http://tempuri.org/IModel/AddSessionSourceResponse")]
        bool AddSessionSource(Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddSessionSource", ReplyAction="http://tempuri.org/IModel/AddSessionSourceResponse")]
        System.IAsyncResult BeginAddSessionSource(Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource, System.AsyncCallback callback, object asyncState);
        
        bool EndAddSessionSource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSessions", ReplyAction="http://tempuri.org/IModel/GetSessionsResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session> GetSessions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetSessions", ReplyAction="http://tempuri.org/IModel/GetSessionsResponse")]
        System.IAsyncResult BeginGetSessions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session> EndGetSessions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSources", ReplyAction="http://tempuri.org/IModel/GetSourcesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source> GetSources();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetSources", ReplyAction="http://tempuri.org/IModel/GetSourcesResponse")]
        System.IAsyncResult BeginGetSources(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source> EndGetSources(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/GetSessionSources", ReplyAction="http://tempuri.org/IModel/GetSessionSourcesResponse")]
        System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource> GetSessionSources();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/GetSessionSources", ReplyAction="http://tempuri.org/IModel/GetSessionSourcesResponse")]
        System.IAsyncResult BeginGetSessionSources(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource> EndGetSessionSources(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModel/AddSessionDesignCallbackReceived", ReplyAction="http://tempuri.org/IModel/AddSessionDesignCallbackReceivedResponse")]
        void AddSessionDesignCallbackReceived();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModel/AddSessionDesignCallbackReceived", ReplyAction="http://tempuri.org/IModel/AddSessionDesignCallbackReceivedResponse")]
        System.IAsyncResult BeginAddSessionDesignCallbackReceived(System.AsyncCallback callback, object asyncState);
        
        void EndAddSessionDesignCallbackReceived(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelChannel : Construct.UX.ViewModels.Sessions.SessionsServiceReference.IModel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSessionSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSessionSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSessionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSessionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSessionSourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSessionSourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelClient : System.ServiceModel.DuplexClientBase<Construct.UX.ViewModels.Sessions.SessionsServiceReference.IModel>, Construct.UX.ViewModels.Sessions.SessionsServiceReference.IModel {
        
        private BeginOperationDelegate onBeginAddSessionDelegate;
        
        private EndOperationDelegate onEndAddSessionDelegate;
        
        private System.Threading.SendOrPostCallback onAddSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddSessionSourceDelegate;
        
        private EndOperationDelegate onEndAddSessionSourceDelegate;
        
        private System.Threading.SendOrPostCallback onAddSessionSourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSessionsDelegate;
        
        private EndOperationDelegate onEndGetSessionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSessionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSourcesDelegate;
        
        private EndOperationDelegate onEndGetSourcesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourcesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSessionSourcesDelegate;
        
        private EndOperationDelegate onEndGetSessionSourcesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSessionSourcesCompletedDelegate;
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ModelClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<AddSessionCompletedEventArgs> AddSessionCompleted;
        
        public event System.EventHandler<AddSessionSourceCompletedEventArgs> AddSessionSourceCompleted;
        
        public event System.EventHandler<GetSessionsCompletedEventArgs> GetSessionsCompleted;
        
        public event System.EventHandler<GetSourcesCompletedEventArgs> GetSourcesCompleted;
        
        public event System.EventHandler<GetSessionSourcesCompletedEventArgs> GetSessionSourcesCompleted;
        
        public bool AddSession(Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session) {
            return base.Channel.AddSession(session);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddSession(Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSession(session, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddSession(System.IAsyncResult result) {
            return base.Channel.EndAddSession(result);
        }
        
        private System.IAsyncResult OnBeginAddSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session = ((Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session)(inValues[0]));
            return this.BeginAddSession(session, callback, asyncState);
        }
        
        private object[] OnEndAddSession(System.IAsyncResult result) {
            bool retVal = this.EndAddSession(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddSessionCompleted(object state) {
            if ((this.AddSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSessionCompleted(this, new AddSessionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSessionAsync(Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session) {
            this.AddSessionAsync(session, null);
        }
        
        public void AddSessionAsync(Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session session, object userState) {
            if ((this.onBeginAddSessionDelegate == null)) {
                this.onBeginAddSessionDelegate = new BeginOperationDelegate(this.OnBeginAddSession);
            }
            if ((this.onEndAddSessionDelegate == null)) {
                this.onEndAddSessionDelegate = new EndOperationDelegate(this.OnEndAddSession);
            }
            if ((this.onAddSessionCompletedDelegate == null)) {
                this.onAddSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSessionCompleted);
            }
            base.InvokeAsync(this.onBeginAddSessionDelegate, new object[] {
                        session}, this.onEndAddSessionDelegate, this.onAddSessionCompletedDelegate, userState);
        }
        
        public bool AddSessionSource(Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource) {
            return base.Channel.AddSessionSource(sessionSource);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddSessionSource(Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSessionSource(sessionSource, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddSessionSource(System.IAsyncResult result) {
            return base.Channel.EndAddSessionSource(result);
        }
        
        private System.IAsyncResult OnBeginAddSessionSource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource = ((Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource)(inValues[0]));
            return this.BeginAddSessionSource(sessionSource, callback, asyncState);
        }
        
        private object[] OnEndAddSessionSource(System.IAsyncResult result) {
            bool retVal = this.EndAddSessionSource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddSessionSourceCompleted(object state) {
            if ((this.AddSessionSourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSessionSourceCompleted(this, new AddSessionSourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSessionSourceAsync(Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource) {
            this.AddSessionSourceAsync(sessionSource, null);
        }
        
        public void AddSessionSourceAsync(Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource sessionSource, object userState) {
            if ((this.onBeginAddSessionSourceDelegate == null)) {
                this.onBeginAddSessionSourceDelegate = new BeginOperationDelegate(this.OnBeginAddSessionSource);
            }
            if ((this.onEndAddSessionSourceDelegate == null)) {
                this.onEndAddSessionSourceDelegate = new EndOperationDelegate(this.OnEndAddSessionSource);
            }
            if ((this.onAddSessionSourceCompletedDelegate == null)) {
                this.onAddSessionSourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSessionSourceCompleted);
            }
            base.InvokeAsync(this.onBeginAddSessionSourceDelegate, new object[] {
                        sessionSource}, this.onEndAddSessionSourceDelegate, this.onAddSessionSourceCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session> GetSessions() {
            return base.Channel.GetSessions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSessions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSessions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session> EndGetSessions(System.IAsyncResult result) {
            return base.Channel.EndGetSessions(result);
        }
        
        private System.IAsyncResult OnBeginGetSessions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSessions(callback, asyncState);
        }
        
        private object[] OnEndGetSessions(System.IAsyncResult result) {
            System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Session> retVal = this.EndGetSessions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSessionsCompleted(object state) {
            if ((this.GetSessionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSessionsCompleted(this, new GetSessionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSessionsAsync() {
            this.GetSessionsAsync(null);
        }
        
        public void GetSessionsAsync(object userState) {
            if ((this.onBeginGetSessionsDelegate == null)) {
                this.onBeginGetSessionsDelegate = new BeginOperationDelegate(this.OnBeginGetSessions);
            }
            if ((this.onEndGetSessionsDelegate == null)) {
                this.onEndGetSessionsDelegate = new EndOperationDelegate(this.OnEndGetSessions);
            }
            if ((this.onGetSessionsCompletedDelegate == null)) {
                this.onGetSessionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSessionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSessionsDelegate, null, this.onEndGetSessionsDelegate, this.onGetSessionsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source> GetSources() {
            return base.Channel.GetSources();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSources(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSources(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source> EndGetSources(System.IAsyncResult result) {
            return base.Channel.EndGetSources(result);
        }
        
        private System.IAsyncResult OnBeginGetSources(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSources(callback, asyncState);
        }
        
        private object[] OnEndGetSources(System.IAsyncResult result) {
            System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.Source> retVal = this.EndGetSources(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourcesCompleted(object state) {
            if ((this.GetSourcesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourcesCompleted(this, new GetSourcesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourcesAsync() {
            this.GetSourcesAsync(null);
        }
        
        public void GetSourcesAsync(object userState) {
            if ((this.onBeginGetSourcesDelegate == null)) {
                this.onBeginGetSourcesDelegate = new BeginOperationDelegate(this.OnBeginGetSources);
            }
            if ((this.onEndGetSourcesDelegate == null)) {
                this.onEndGetSourcesDelegate = new EndOperationDelegate(this.OnEndGetSources);
            }
            if ((this.onGetSourcesCompletedDelegate == null)) {
                this.onGetSourcesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourcesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourcesDelegate, null, this.onEndGetSourcesDelegate, this.onGetSourcesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource> GetSessionSources() {
            return base.Channel.GetSessionSources();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSessionSources(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSessionSources(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource> EndGetSessionSources(System.IAsyncResult result) {
            return base.Channel.EndGetSessionSources(result);
        }
        
        private System.IAsyncResult OnBeginGetSessionSources(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSessionSources(callback, asyncState);
        }
        
        private object[] OnEndGetSessionSources(System.IAsyncResult result) {
            System.Collections.Generic.List<Construct.UX.ViewModels.Sessions.SessionsServiceReference.SessionSource> retVal = this.EndGetSessionSources(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSessionSourcesCompleted(object state) {
            if ((this.GetSessionSourcesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSessionSourcesCompleted(this, new GetSessionSourcesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSessionSourcesAsync() {
            this.GetSessionSourcesAsync(null);
        }
        
        public void GetSessionSourcesAsync(object userState) {
            if ((this.onBeginGetSessionSourcesDelegate == null)) {
                this.onBeginGetSessionSourcesDelegate = new BeginOperationDelegate(this.OnBeginGetSessionSources);
            }
            if ((this.onEndGetSessionSourcesDelegate == null)) {
                this.onEndGetSessionSourcesDelegate = new EndOperationDelegate(this.OnEndGetSessionSources);
            }
            if ((this.onGetSessionSourcesCompletedDelegate == null)) {
                this.onGetSessionSourcesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSessionSourcesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSessionSourcesDelegate, null, this.onEndGetSessionSourcesDelegate, this.onGetSessionSourcesCompletedDelegate, userState);
        }
    }
}
